<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD MAPPER 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bilibili.dao.VideoMapper">
    <select id="pageCountVideos" parameterType="java.util.Map" resultType="java.lang.Integer">
        select
            count(1)
        from
            video
        <where>
            1=1
            <if test="area != null and area != ''">
                and area = #{area}
            </if>
        </where>
    </select>

    <select id="pageListVideos" parameterType="java.util.Map" resultType="com.bilibili.domain.Video">
        select
        *
        from
        video
        <where>
            1=1
            <if test="area != null and area != ''">
                and area = #{area}
            </if>
        </where>
        order by createTime desc
        limit #{start}, #{limit}
    </select>

    <select id="getVideoById" parameterType="java.lang.Long" resultType="com.bilibili.domain.Video">
        select
            *
        from
            video
        where
            id = #{id}
    </select>

    <select id="getVideoIdByVideoIdAndUserId" parameterType="java.util.Map" resultType="java.lang.Long">
        select
            id
        from
            video_like
        where
            userId = #{userId}
          and videoId = #{videoId}
    </select>

    <select id="countVideoLikes" parameterType="java.lang.Long" resultType="java.lang.Integer">
        select
            count(1)
        from
            video_like
        where
            videoId = #{videoId}
    </select>

    <select id="countVideoCollections" parameterType="java.lang.Long" resultType="java.lang.Integer">
        select
            count(1)
        from
            video_collection
        where
            videoId = #{videoId}
    </select>

    <select id="getVideoCollectionByVideoIdAndUserId" parameterType="java.util.Map" resultType="com.bilibili.domain.VideoCollection">
        select
            *
        from
            video_collection
        where
            userId = #{userId}
          and videoId = #{videoId}
    </select>

    <select id="getVideoCoinByVideoIdAndUserId" parameterType="java.util.Map" resultType="com.bilibili.domain.VideoCoin">
        select
            *
        from
            video_coin
        where
            userId = #{userId}
          and videoId = #{videoId}
    </select>

    <select id="getVideoCoinsAmount" parameterType="java.lang.Long" resultType="java.lang.Integer">
        select
            sum(amount)
        from
            video_coin
        where
            videoId = #{videoId}
    </select>

    <select id="pageCountVideoComments" parameterType="java.util.Map" resultType="java.lang.Integer">
        select
        count(1)
        from
        video_comment
        <where>
            videoId = #{videoId}
            and rootId is null
        </where>
    </select>

    <select id="pageListVideoComments" parameterType="java.util.Map" resultType="com.bilibili.domain.VideoComment">
        select
            *
        from
            video_comment
        where
            videoId = #{videoId}
          and rootId is null
        order by id desc
            limit #{start}, #{limit}
    </select>

    <select id="pageListVideoCommentsByParentIds" parameterType="java.util.List" resultType="com.bilibili.domain.VideoComment">
        select
        *
        from
        video_comment
        where
        rootId in
        <foreach collection="parentIds" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
        order by id
    </select>

    <select id="getVideoDetails" parameterType="java.lang.Long" resultType="com.bilibili.domain.Video">
        select
            *
        from
            video
        where
            id = #{id}
    </select>

    <!-- 修复1: 移除id字段，使用values而不是value -->
    <insert id="addVideos" parameterType="com.bilibili.domain.Video" useGeneratedKeys="true" keyProperty="id">
        insert into
            video(
            userId,
            url,
            thumbnail,
            title,
            `type`,
            duration,
            area,
            description
        ) values (
                     #{userId},
                     #{url},
                     #{thumbnail},
                     #{title},
                     #{type},
                     #{duration},
                     #{area},
                     #{description}
                 )
    </insert>

    <!-- 修复2: 正确的批量插入语法 -->
    <insert id="batchAddVideoTags" parameterType="java.util.List">
        insert into video_tag (videoId, tagId) values
        <foreach collection="list" item="item" separator=",">
            (#{item.videoId}, #{item.tagId})
        </foreach>
    </insert>

    <!-- 修复3: 使用values而不是value -->
    <insert id="addVideoLike" parameterType="com.bilibili.domain.VideoLike">
        insert into
            video_like(
            userId,
            videoId
        ) values (
                     #{userId},
                     #{videoId}
                 )
    </insert>

    <!-- 修复4: 添加缺失的逗号 -->
    <insert id="addVideoCollection" parameterType="com.bilibili.domain.VideoCollection">
        insert into
            video_collection(
            userId,
            videoId,
            groupId
        ) values (
                     #{userId},
                     #{videoId},
                     #{groupId}
                 )
    </insert>

    <!-- 修复5: 语法正确 -->
    <insert id="addVideoCoin" parameterType="com.bilibili.domain.VideoCoin">
        insert into
            video_coin(
            userId,
            videoId,
            amount
        ) values (
                     #{userId},
                     #{videoId},
                     #{amount}
                 )
    </insert>

    <!-- 修复6: 移除多余的逗号 -->
    <insert id="addVideoComment" parameterType="com.bilibili.domain.VideoComment">
        insert into
            video_comment(
            userId,
            videoId,
            comment,
            replyUserId,
            rootId
        ) values (
                     #{userId},
                     #{videoId},
                     #{comment},
                     #{replyUserId},
                     #{rootId}
                 )
    </insert>

    <update id="updateVideoCoin" parameterType="com.bilibili.domain.VideoCoin">
        update
            video_coin
        set
            amount = #{amount}
        where
            userId = #{userId}
          and videoId = #{videoId}
    </update>

    <delete id="deleteVideoLike">
        delete from
            video_like
        where
            userId = #{userId}
          and videoId = #{videoId}
    </delete>

    <delete id="deleteVideoCollection">
        delete from
            video_collection
        where
            userId = #{userId}
          and videoId = #{videoId}
    </delete>
</mapper>
